version: '3'

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: 
      --api.insecure=true 
      --providers.docker 
      --log.level=DEBUG 

  auth-server:
    build: ./auth
    container_name: auth-server
    ports:
      - "8000:8000"
    labels:
       - "traefik.enable=true"
       - "traefik.http.routers.auth.rule=Host(`localhost`)"
       - "traefik.http.services.auth.loadbalancer.server.port=8000"
    depends_on:
      - mongo

  event-server:
    build: ./events
    container_name: events-server
    ports:
      - "8888:8888"
    environment:
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=event_table
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event-server.rule=Host(`localhost`)"
      - "traefik.http.services.event-server.loadbalancer.server.port=8888"
    depends_on:
      - postgres


  postgres:
    image: postgres:latest
    hostname: postgres.local
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=event_table
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongo:
    image: mongo:4.0
    hostname: mongo.local
    restart: always
    ports:
      - "27017:27017"
    command:
      - "mongod"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
  postgres-data: