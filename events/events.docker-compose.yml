services:
  event-server:
    build: ./events
    container_name: events-server
    ports:
      - "8888:8888"
    environment:
      - PGHOST=postgres
      - PGPORT=5432
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=event_table
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event-server.rule=Host(`event.localhost`)"
      - traefik.http.routers.app.middlewares=auth-forward
      - traefik.http.middlewares.auth-forward.forwardauth.address=http://auth-server:8000/auth
      - traefik.http.middlewares.auth-forward.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.auth-forward.forwardauth.authResponseHeaders=X-User-Id,X-User-Role
    depends_on:
      - postgres
      - kafka
    networks:
      - shared-network

  postgres:
    image: postgres:latest
    container_name: events-db
    hostname: postgres.local
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=event_table
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - shared-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - shared-network

  kafka:
    image: apache/kafka-native
    container_name: events-kafka
    ports:
      - "9093:9093"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shared-network

  kafka-ui:
    image: kafbat/kafka-ui:main
    container_name: events-kafka-ui
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka

networks:
  shared-network:
    external: false

volumes:
  postgres-data:
    external: false